name: MinGW
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rdoc'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rdoc'

# Notes:
# Actions console encoding causes issues, see test-all & test-spec steps
#
jobs:
  make:
    runs-on: windows-2019
    env:
      MSYSTEM: ${{ matrix.msystem }}
      MSYS2_ARCH: x86_64
      CHOST: "x86_64-w64-mingw32"
      CFLAGS:   "-march=x86-64 -mtune=generic -O3 -pipe -fstack-protector-strong"
      CXXFLAGS: "-march=x86-64 -mtune=generic -O3 -pipe"
      CPPFLAGS: "-D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -DFD_SETSIZE=2048"
      LDFLAGS:  "-pipe -fstack-protector-strong"
      UPDATE_UNICODE: "UNICODE_FILES=. UNICODE_PROPERTY_FILES=. UNICODE_AUXILIARY_FILES=. UNICODE_EMOJI_FILES=."
      GITPULLOPTIONS: --no-tags origin ${{github.ref}}
      
    steps:
      - name: autogen
        run: |
          ./autogen.sh
        working-directory: src
        shell: sh

      - name: configure
        run: |
          # Actions uses UTF8, causes test failures, similar to normal OS setup
          $PSDefaultParameterValues['*:Encoding'] = 'utf8'
          [Console]::OutputEncoding = [System.Text.Encoding]::GetEncoding("IBM437")
          [Console]::InputEncoding  = [System.Text.Encoding]::GetEncoding("IBM437")
          $config_args = "--build=$env:CHOST --host=$env:CHOST --target=$env:CHOST"
          Write-Host $config_args
          sh -c "../src/configure --disable-install-doc --prefix=/. $config_args"
          # Write-Host "-------------------------------------- config.log"
          # Get-Content ./config.log | foreach {Write-Output $_}

      - name: update
        run: |
          make -j $env:BUILD_JOBS incs

      - name: download gems
        run: |
          make -j $env:BUILD_JOBS update-gems

      - name: make all
        timeout-minutes: 20
        run: |
          make -j $env:BUILD_JOBS

      - run: make leaked-globals

      - name: make install
        run: |
          # Actions uses UTF8, causes test failures, similar to normal OS setup
          $PSDefaultParameterValues['*:Encoding'] = 'utf8'
          [Console]::OutputEncoding = [System.Text.Encoding]::GetEncoding("IBM437")
          [Console]::InputEncoding  = [System.Text.Encoding]::GetEncoding("IBM437")
          make DESTDIR=../install install-nodoc

      - name: test
        timeout-minutes: 5
        run: |
          make test

      - name: test-all
        timeout-minutes: 40
        run: |
          # Actions uses UTF8, causes test failures, similar to normal OS setup
          $PSDefaultParameterValues['*:Encoding'] = 'utf8'
          [Console]::OutputEncoding = [System.Text.Encoding]::GetEncoding("IBM437")
          [Console]::InputEncoding  = [System.Text.Encoding]::GetEncoding("IBM437")
          if ($env:BUNDLER_VERSION) { Remove-Item env:\BUNDLER_VERSION }
          make test-all TESTOPTS="-j $env:TEST_JOBS --retry --job-status=normal --show-skip --timeout-scale=1.5"

      - name: test-spec
        timeout-minutes: 10
        working-directory: src/spec/ruby
        run: |
          $env:Path = "$pwd/../../../install/bin;$env:Path"
          # Actions uses UTF8, causes test failures, similar to normal OS setup
          $PSDefaultParameterValues['*:Encoding'] = 'utf8'
          [Console]::OutputEncoding = [System.Text.Encoding]::GetEncoding("IBM437")
          [Console]::InputEncoding  = [System.Text.Encoding]::GetEncoding("IBM437")
          ruby -v
          ruby ../mspec/bin/mspec -I../../tool/lib -j --timeout 60

      - uses: k0kubun/action-slack@v2.0.0
        with:
          payload: |
            {
              "ci": "GitHub Actions",
              "env": "${{ github.workflow }} / ${{ matrix.test_task }}",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref }}".split('/').reverse()[0]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() && github.event_name == 'push' }}

defaults:
  run:
    working-directory: build
